import{_ as s,c as i,a0 as l,o as e}from"./chunks/framework.p2VkXzrt.js";const c=JSON.parse('{"title":"消息屏蔽功能详解","description":"","frontmatter":{},"headers":[],"relativePath":"features/message-blocking.md","filePath":"features/message-blocking.md"}'),n={name:"features/message-blocking.md"};function t(h,a,p,r,k,o){return e(),i("div",null,a[0]||(a[0]=[l(`<h1 id="消息屏蔽功能详解" tabindex="-1">消息屏蔽功能详解 <a class="header-anchor" href="#消息屏蔽功能详解" aria-label="Permalink to &quot;消息屏蔽功能详解&quot;">​</a></h1><h2 id="文字消息屏蔽-📝" tabindex="-1">文字消息屏蔽 📝 <a class="header-anchor" href="#文字消息屏蔽-📝" aria-label="Permalink to &quot;文字消息屏蔽 📝&quot;">​</a></h2><h3 id="精确匹配模式" tabindex="-1">精确匹配模式 <a class="header-anchor" href="#精确匹配模式" aria-label="Permalink to &quot;精确匹配模式&quot;">​</a></h3><p>完全匹配指定的文字内容才会触发屏蔽。适用于需要精确控制的场景。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 示例规则</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;exact&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;要屏蔽的确切内容&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="包含匹配模式" tabindex="-1">包含匹配模式 <a class="header-anchor" href="#包含匹配模式" aria-label="Permalink to &quot;包含匹配模式&quot;">​</a></h3><p>只要消息中包含指定关键词就会触发屏蔽。适用于更灵活的屏蔽需求。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 示例规则</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;includes&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;关键词&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="表情屏蔽-😊" tabindex="-1">表情屏蔽 😊 <a class="header-anchor" href="#表情屏蔽-😊" aria-label="Permalink to &quot;表情屏蔽 😊&quot;">​</a></h2><h3 id="普通表情" tabindex="-1">普通表情 <a class="header-anchor" href="#普通表情" aria-label="Permalink to &quot;普通表情&quot;">​</a></h3><p>支持屏蔽QQ默认表情和自定义表情包。</p><h3 id="超级表情" tabindex="-1">超级表情 <a class="header-anchor" href="#超级表情" aria-label="Permalink to &quot;超级表情&quot;">​</a></h3><ul><li>自动识别超级表情元素</li><li>支持针对特定超级表情的屏蔽</li><li>可配置全局超级表情屏蔽</li></ul><h2 id="最佳实践-✨" tabindex="-1">最佳实践 ✨ <a class="header-anchor" href="#最佳实践-✨" aria-label="Permalink to &quot;最佳实践 ✨&quot;">​</a></h2><ol><li><p><strong>规则优先级</strong></p><ul><li>精确匹配优先级高于包含匹配</li><li>用户级规则优先于全局规则</li></ul></li><li><p><strong>性能优化</strong></p><ul><li>避免过于复杂的正则表达式</li><li>及时清理无用规则</li></ul></li><li><p><strong>配置管理</strong></p><ul><li>定期备份配置</li><li>使用版本控制管理规则</li></ul></li></ol>`,15)]))}const g=s(n,[["render",t]]);export{c as __pageData,g as default};
