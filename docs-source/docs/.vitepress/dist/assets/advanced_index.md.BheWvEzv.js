import{_ as i,c as s,R as l,o as e}from"./chunks/framework.UGEFmzor.js";import"./chunks/theme.DO0BlSyy.js";const u=JSON.parse('{"title":"高级用法","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/index.md","filePath":"advanced/index.md"}'),t={name:"advanced/index.md"};function n(h,a,r,o,d,p){return e(),s("div",null,a[0]||(a[0]=[l(`<h1 id="高级用法" tabindex="-1">高级用法 <a class="header-anchor" href="#高级用法" aria-label="Permalink to &quot;高级用法&quot;">​</a></h1><h2 id="自定义规则" tabindex="-1">自定义规则 <a class="header-anchor" href="#自定义规则" aria-label="Permalink to &quot;自定义规则&quot;">​</a></h2><h3 id="规则语法" tabindex="-1">规则语法 <a class="header-anchor" href="#规则语法" aria-label="Permalink to &quot;规则语法&quot;">​</a></h3><p>学习如何使用模式匹配创建自定义屏蔽规则：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;pattern&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;联系人名称&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;action&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;block&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;message&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="规则类型" tabindex="-1">规则类型 <a class="header-anchor" href="#规则类型" aria-label="Permalink to &quot;规则类型&quot;">​</a></h3><ul><li>基于联系人的规则</li><li>模式匹配规则</li><li>正则表达式规则</li></ul><h2 id="故障排除" tabindex="-1">故障排除 <a class="header-anchor" href="#故障排除" aria-label="Permalink to &quot;故障排除&quot;">​</a></h2><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h3><ul><li>插件无法工作</li><li>规则不生效</li><li>配置问题</li></ul><h3 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h3><ul><li>重启插件</li><li>重置插件设置</li><li>更新屏蔽规则</li></ul><h2 id="开发" tabindex="-1">开发 <a class="header-anchor" href="#开发" aria-label="Permalink to &quot;开发&quot;">​</a></h2><h3 id="从源码构建" tabindex="-1">从源码构建 <a class="header-anchor" href="#从源码构建" aria-label="Permalink to &quot;从源码构建&quot;">​</a></h3><ol><li>克隆仓库</li><li>安装依赖</li><li>构建插件</li></ol><h3 id="贡献" tabindex="-1">贡献 <a class="header-anchor" href="#贡献" aria-label="Permalink to &quot;贡献&quot;">​</a></h3><ul><li>如何贡献</li><li>代码规范</li><li>Pull Request 流程</li></ul>`,17)]))}const E=i(t,[["render",n]]);export{u as __pageData,E as default};
